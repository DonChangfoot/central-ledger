export declare class FileTestHelper {
    private basePath;
    private filesToCleanup;
    private fileGlobsToCleanup;
    constructor(basePath?: string);
    fileExists(filePath: string): boolean;
    fileGlobExists(fileGlobPath: string): number;
    getFileTextContent(filePath: string): string;
    getFileGlobTextContent(fileGlobPath: string): string[];
    deleteFile(filePath: string, { isPathAbsolute }?: {
        isPathAbsolute?: boolean;
    }): void;
    deleteFileGlob(fileGlobPath: string): void;
    /**
     * Create file and (optionally) register it for later cleanup
     */
    createFile(filePath: string, fileContent: any, { willBeCleanedUp, isPathAbsolute }?: {
        willBeCleanedUp?: boolean;
        isPathAbsolute?: boolean;
    }): void;
    /**
     * Add path to a file that should be deleted after calling cleanup command
     */
    registerForCleanup(filePath: string, { isPathAbsolute }?: {
        isPathAbsolute?: boolean;
    }): void;
    /**
     * Add glob path to a file that should be deleted after calling cleanup command
     */
    registerGlobForCleanup(fileGlobPath: string): void;
    /**
     * Delete all files that were created by this helper or explicitly added to cleanup list
     */
    cleanup(): void;
}
