import Toxiproxy from "./Toxiproxy";
import Toxic, { AttributeTypes as ToxicAttributeTypes, ToxicJson } from "./Toxic";
import { ICreateProxyResponse, IGetProxyResponse, ICreateToxicBody, IGetToxicsResponse } from "./interfaces";
export interface ProxyJson {
    name: string;
    listen: string;
    upstream: string;
    enabled: boolean;
    toxics: ToxicJson<any>[];
}
export default class Proxy {
    toxiproxy: Toxiproxy;
    name: string;
    listen: string;
    upstream: string;
    enabled: boolean;
    toxics: Toxic<ToxicAttributeTypes>[];
    constructor(toxiproxy: Toxiproxy, body: ICreateProxyResponse | IGetProxyResponse);
    toJson(): ProxyJson;
    setToxics(toxics: IGetToxicsResponse<any>): void;
    getHost(): string;
    getPath(): string;
    remove(): Promise<void>;
    update(): Promise<Proxy>;
    refreshToxics(): Promise<void>;
    addToxic<T>(body: ICreateToxicBody<T>): Promise<Toxic<T>>;
}
